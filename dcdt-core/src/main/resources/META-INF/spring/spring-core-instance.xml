<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:dcdt="http://direct-test.com/spring/schema/spring-dcdt"
    xmlns:lang="http://www.springframework.org/schema/lang"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://direct-test.com/spring/schema/spring-dcdt http://direct-test.com/spring/schema/spring-dcdt.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!--====================================================================================================
    = INSTANCE CONFIG PERSISTENCE
    =====================================================================================================-->
    <lang:groovy id="setInstanceConfigSysProps">
        <lang:inline-script><![CDATA[
        import java.util.Properties
        import org.apache.commons.lang3.SystemUtils
        import org.apache.derby.iapi.reference.Property
        import org.springframework.jdbc.datasource.embedded.OutputStreamFactory

        Properties sysProps = System.properties
        sysProps.setProperty(Property.ERRORLOG_METHOD_PROPERTY, (OutputStreamFactory.name + ".getNoopOutputStream"))
        sysProps.setProperty(Property.SYSTEM_HOME_PROPERTY, SystemUtils.userDir.path)

        return sysProps
        ]]></lang:inline-script>
    </lang:groovy>
    
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="instanceConfigDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" depends-on="setInstanceConfigSysProps" destroy-method="close"
        p:acquireIncrement="1"
        p:driverClass="org.apache.derby.jdbc.EmbeddedDriver"
        p:initialPoolSize="1"
        p:jdbcUrl="#{ T(org.apache.derby.iapi.reference.Attribute).PROTOCOL }${dcdt.instance.db.dir}/${dcdt.instance.db.name}"
        p:maxIdleTime="#{ T(com.mchange.v2.c3p0.impl.C3P0Defaults).maxIdleTime() }"
        p:maxPoolSize="#{ T(com.mchange.v2.c3p0.impl.C3P0Defaults).maxPoolSize() }"
        p:minPoolSize="1"
        p:password="${dcdt.instance.db.pass}"
        p:user="${dcdt.instance.db.user}">
        <beans:property name="properties">
            <beans:props>
                <beans:prop key="#{ T(org.apache.derby.iapi.reference.Attribute).CREATE_ATTR }">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    
    <beans:bean id="instanceConfigDataSourceInit" class="org.springframework.jdbc.datasource.init.DataSourceInitializer"
        p:dataSource-ref="instanceConfigDataSource">
        <beans:property name="databasePopulator">
            <beans:bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator"
                p:continueOnError="true"
                p:ignoreFailedDrops="true">
                <beans:property name="scripts">
                    <beans:list>
                        <beans:value>classpath*:META-INF/core/db/db-instance-init.sql</beans:value>
                    </beans:list>
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <beans:bean id="instanceConfigSessionFactory" class="gov.hhs.onc.dcdt.data.impl.ToolLocalSessionFactoryBean" destroy-method="destroy"
        p:dataSource-ref="instanceConfigDataSource"
        p:entityInterceptor-ref="compositeBeanInterceptor"
        p:packagesToScan="gov.hhs.onc.dcdt">
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="#{ T(org.hibernate.cfg.AvailableSettings).AUTO_CLOSE_SESSION }">true</beans:prop>
                <beans:prop key="#{ T(org.hibernate.cfg.AvailableSettings).DIALECT }">org.hibernate.dialect.DerbyTenSevenDialect</beans:prop>
            </beans:props>
        </beans:property>
        <beans:property name="userTypes">
            <beans:set>
                <beans:ref bean="certUserType"/>
                <beans:ref bean="dnsNameUserType"/>
                <beans:ref bean="inetAddrUserType"/>
                <beans:ref bean="keyUserType"/>
                <beans:ref bean="mailAddrUserType"/>
                <beans:ref bean="uriUserType"/>
                <beans:ref bean="x500NameUserType"/>
            </beans:set>
        </beans:property>
    </beans:bean>
    
    <beans:bean id="instanceConfigTransactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager"
        p:entityInterceptor-ref="compositeBeanInterceptor"
        p:nestedTransactionAllowed="true"
        p:rollbackOnCommitFailure="true"
        p:sessionFactory-ref="instanceConfigSessionFactory"
        p:validateExistingTransaction="true"/>
    
    <beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    
    <tx:annotation-driven transaction-manager="instanceConfigTransactionManager"/>
    
    <!--====================================================================================================
    = INSTANCE CONFIG
    =====================================================================================================-->
    <beans:bean id="instanceConfig" class="gov.hhs.onc.dcdt.config.instance.InstanceConfig" abstract="true"/>
    
    <beans:bean id="instanceConfigImpl" class="gov.hhs.onc.dcdt.config.instance.impl.InstanceConfigImpl" parent="instanceConfig"
        depends-on="instanceConfigServiceImpl"/>
    <beans:alias name="instanceConfigImpl" alias="instanceConfigMain"/>
</beans:beans>